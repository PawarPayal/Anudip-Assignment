# -*- coding: utf-8 -*-
"""Hotel Booking Analysis ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mbHfmGLXdN3yAu48mfa2nWyWTo2yVo-l
"""

# Import Libraries
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

# Mounting Drive
from google.colab import drive
drive.mount('/content/drive')

#loading Dataset
file_path='/content/drive/MyDrive/Hotel Bookings.csv'
df = pd.read_csv(file_path)

# Dataset First Look
df.head()

# Dataset Rows & Columns count
df.index

df.columns

# Dataset Info
df.info()

# Dataset Duplicate Value Count
duplicate_values = df.duplicated().value_counts()
duplicate_values

# Visualizing the duplicate values
plt.figure(figsize=(10,8))
sns.countplot(x=df.duplicated())
plt.title('Visualisation of duplicated value')
plt.ylabel('Duplicate Values')
plt.show()

# Dataset Duplicate Value Drop
df.drop_duplicates(inplace=True)

unique_df=df.shape[0]
unique_df
# as we can see that before dropping duplicate values we are having 119390 rows
# and now after droping duplicate rows we can see that there are 87396 uniqe rows

#lets reset the index to view the unique data
df.reset_index()

# Missing Values/Null Values Count
null_values = df.isna()== True
null_values
#we have check the null values in DataFrame

df.fillna(np.nan , inplace=True)
df
#We have replaced all null values as NaN

# Visualizing the missing values
a = df.isna().sum()
missing_values=a.sort_values(ascending = False)[:5]
missing_values

plt.figure(figsize=(15,6))
missing_values.plot(kind = 'bar', fontsize = 20,legend='True')
plt.title('Visualisation of missing value')
plt.ylabel('missing value')
plt.xlabel('Rows')
plt.show()

df.info()

# Dataset Columns
df.columns

# Dataset Describe
df.describe(include='all')

# Check Unique Values for each variable.
# We describe all the unique values using lambda fuction of indivisual column.
a=df.apply(lambda col: col.unique())
print(a)

# Write your code to make your dataset analysis ready.
#making a copy of data set
df1= df.copy()

# Adding total staying days in hotels
df1['total_stay'] = df1['stays_in_weekend_nights']+df1['stays_in_week_nights']

# Adding total people num as a column
df1['total_num_people'] = df1['adults']+df1['children']+df1['babies']

df1.head()

#There are some rows with total number of
#adults,children or babies equal to zero this means there is no any booking were made.
# So we can remove such rows

df1[df1['total_num_people']== 0].shape

df1.drop(df1[df1['total_num_people']== 0].index ,inplace=True)
df1.head()

"""Question no. 1 Which Type Of hotel have More number of bookings [ City hotels or Resort Hotels ]"""

# Chart - 1 visualization code
hotel_value_counts = df1['hotel'].value_counts()
hotel_value_counts

#Pie Chart for Most Preffered  Hotel
hotel_value_counts.plot.pie(figsize=(11,9),shadow=True,fontsize=20, autopct='%1.2f%%',)

plt.title('Most Preffered  Hotel',fontsize = 10)
plt.show()

"""Question no. 2 Which Type Of hotel have Highest revenue or ADR[ City hotels or Resort Hotels ]"""

# Chart - 2 visualization code
# group by hotel
grup_by_hotel=df1.groupby('hotel')

#grouping by hotel adr
highest_adr=grup_by_hotel['adr'].mean().reset_index()

#set plot size
plt.figure(figsize=(11,9))

#plot the graph
sns.barplot(x=highest_adr['hotel'],y=highest_adr['adr'])

# set labels
plt.xlabel('Hotel type')
plt.ylabel('ADR')
plt.title("Avg ADR of each Hotel type")

"""
Question no. 3 What is the pecentage of Booking cancellation for both type"""

# Chart - 7 visualization code
df1['is_canceled'].value_counts().plot.pie(autopct='%1.1f%%', shadow=True, figsize=(11,9),fontsize=20)
plt.title("Cancellation")

"""Question no. 4 -In which months there are more number of bookings"""

# Chart - 4 visualization code
# groupby arrival_date_month and taking the hotel count
bookings_by_months_df=df1.groupby(['arrival_date_month'])['hotel'].count().reset_index().rename(columns={'hotel':"Counts"})
# Create list of months in order
months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']
# creating df which will map the order of above months list without changing its values.
bookings_by_months_df['arrival_date_month']=pd.Categorical(bookings_by_months_df['arrival_date_month'],categories=months,ordered=True)
# sorting by arrival_date_month
bookings_by_months_df=bookings_by_months_df.sort_values('arrival_date_month')

bookings_by_months_df

# set plot size
plt.figure(figsize=(11,9))

#pltting lineplot on x- months & y- booking counts
sns.lineplot(x=bookings_by_months_df['arrival_date_month'],y=bookings_by_months_df['Counts'])

# set title for the plot
plt.title('Number of bookings across each month')
#set x label
plt.xlabel('Month')
#set y label
plt.ylabel('Number of bookings')

df1['arrival_date_month'].value_counts().plot.pie(autopct='%1.1f%%', shadow=True, figsize=(11,9),fontsize=20)

"""Question no. 5 Which is the most prefered room type by guest"""

# Chart - 2 Assignment of Room Type
plt.figure(figsize=(11,9))
sns.countplot(x=df1['assigned_room_type'])
plt.title('Room type booking')
plt.ylabel('Count')
plt.show()

"""Question no. 6 Which agent made the most number of bookings"""

# Chart - 6 visualization code
top_bookings_by_agent = df1['agent'].value_counts().reset_index().rename(columns={'index':'agent','agent':'num_of_bookings'})[:10]
top_bookings_by_agent

